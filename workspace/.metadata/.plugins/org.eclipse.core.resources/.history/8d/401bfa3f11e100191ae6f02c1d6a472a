package me.Arouraios.Crystal.minigame;

import java.util.logging.Logger;

import org.bukkit.Server;
import org.bukkit.configuration.file.FileConfiguration;

import me.Arouraios.Crystal.utils.Commander;
import me.Arouraios.Crystal.utils.CountDown;
import me.Arouraios.Crystal.worlds.WorldManager;

public class Game implements Runnable{
	private Thread t;
	private String count;
	private Logger log;
	private FileConfiguration conf;
	private WorldManager WM;
	private Server serv;
	private Commander C;
	private String status;
	
	public Game(String gameCount, Logger pLog, FileConfiguration pConf, WorldManager pWM, Server pServ, Commander pC) {
		count=gameCount;
		log=pLog;
		conf=pConf;
		WM=pWM;
		serv=pServ;
		C=pC;
		status = 0+"";
		t = new Thread(this, count);
		t.run();
		log.info("game " + count + " started running");
	}
	
	public void run() {
		//create Teams/initialize TeamMaster
		
		play();
	}
	
	private void play() {
		while(true) {
			switch (status) {
			case 0+"":
				loadLobby();
				CountDown.main(serv, this, 30);
				status="lobby";
				break;
			case "lobby":
				break;
			
			case "loadgame":
				loadGame();
				CountDown.main(serv, this, 120);
				break;
			case "game":
				break;
			case "end":
				String[] args = {"World", 0+"", 0+"", 0+""};
				C.tpalltoloc(args, null);
				break;
			}
		}
	}
	
	private void loadGame() {
		WM.loadWorld("miniWorld" + count);
		String[] args2 = {"miniWorld" + count, 0 + "", 0 + "", 0 + ""}; 
		C.tpalltoloc(args2);
	}
	
	private void loadLobby() {
		WM.loadWorld("miniWorldLobby" + count);
		log.info("all players will be teleported to the new game-lobby in 10 seconds");
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			log.warning(e.getMessage());
			e.printStackTrace();
		}
		String[] args = {"miniWorldLobby" + count, 0 + "", 0 + "", 0 + ""}; 
		C.tpalltoloc(args);
	}
	
	public String getCount() {
		return count;
	}
	
	public Thread getThread() {
		return t;
	}

	public void timerEnded() {
		// TODO Auto-generated method stub
		
	}

	public String getWorld() {
		// TODO Auto-generated method stub
		return null;
	}
}
